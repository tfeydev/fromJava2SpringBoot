name: Build & Deploy SpringBootAngularFullstack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Java 21 bereitstellen
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3️⃣ Node.js für Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 4️⃣ Maven Backend Build
      - name: Build Backend with Maven
        working-directory: ./SpringBootAngularFullstack/backend
        run: |
          chmod +x ./mvnw || true
          ./mvnw clean package -DskipTests
          ls -l target/

      # 5️⃣ Frontend Build
      - name: Build Frontend
        working-directory: ./SpringBootAngularFullstack/frontend
        run: |
          npm install
          npm run build --prod
          ls -l dist/

      # 6️⃣ Single Docker-Image für Backend+Frontend
      - name: Build Combined Docker Image
        run: |
          docker build -t springboot-angular-fullstack:latest -f SpringBootAngularFullstack/Dockerfile .

      # 7️⃣ Docker-Image als tar.gz speichern
      - name: Save Docker Image
        run: docker save springboot-angular-fullstack:latest | gzip > SpringBootAngularFullstack/fullstack.tar.gz

      # 8️⃣ Docker-Image via SCP kopieren (Key direkt aus Secret)
      - name: Copy Docker Image to VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          source: SpringBootAngularFullstack/fullstack.tar.gz
          target: /home/ubuntu/dev/

      # 9️⃣ Docker-Container via SSH starten/aktualisieren
      - name: Deploy Docker Container via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd /home/ubuntu/dev
            gunzip -c fullstack.tar.gz | docker load
            docker-compose -f docker-compose.yml up -d --build
