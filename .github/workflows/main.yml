name: Build & Deploy SpringBootAngularFullstack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Java 21 bereitstellen
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3Ô∏è‚É£ Optional: Node.js f√ºr Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 4Ô∏è‚É£ Maven Backend Build
      - name: Build Backend with Maven
        working-directory: ./SpringBootAngularFullstack/backend
        run: |
          chmod +x ./mvnw || true
          ./mvnw clean package -DskipTests
          ls -l target/

      # 5Ô∏è‚É£ Optional: Build Frontend (Angular)
      - name: Build Frontend
        working-directory: ./SpringBootAngularFullstack/frontend
        run: |
          if [ -f package.json ]; then
            npm install
            npm run build --prod
          fi
          ls -l dist/

      # 6Ô∏è‚É£ Docker-Image f√ºr Backend bauen
      - name: Build Backend Docker Image
        run: |
          docker build -t springboot-angular-fullstack-backend:latest -f SpringBootAngularFullstack/backend/Dockerfile SpringBootAngularFullstack/backend

      # 7Ô∏è‚É£ Docker-Image f√ºr Frontend bauen
      - name: Build Frontend Docker Image
        run: |
          docker build -t springboot-angular-fullstack-frontend:latest -f SpringBootAngularFullstack/frontend/Dockerfile SpringBootAngularFullstack/frontend

      # 8Ô∏è‚É£ Docker-Images als tar.gz speichern
      - name: Save Docker Images
        run: |
          docker save springboot-angular-fullstack-backend:latest | gzip > SpringBootAngularFullstack/backend.tar.gz
          docker save springboot-angular-fullstack-frontend:latest | gzip > SpringBootAngularFullstack/frontend.tar.gz

      # 9Ô∏è‚É£ SSH Key vorbereiten
      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" | tr -d '\r' > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      # üîü Backend Image via SCP kopieren
      - name: Copy Backend Image to VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key_path: /tmp/id_rsa
          source: SpringBootAngularFullstack/backend.tar.gz
          target: /home/ubuntu/dev/

      # 1Ô∏è‚É£1Ô∏è‚É£ Frontend Image via SCP kopieren
      - name: Copy Frontend Image to VM
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key_path: /tmp/id_rsa
          source: SpringBootAngularFullstack/frontend.tar.gz
          target: /home/ubuntu/dev/

      # 1Ô∏è‚É£2Ô∏è‚É£ Docker-Container via SSH auf VM starten/aktualisieren
      - name: Deploy Docker Containers via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key_path: /tmp/id_rsa
          script: |
            cd /home/ubuntu/dev
            gunzip -c backend.tar.gz | docker load
            gunzip -c frontend.tar.gz | docker load
            docker-compose -f docker-compose.yml up -d --build
