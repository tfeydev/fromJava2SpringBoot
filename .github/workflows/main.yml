name: Build and Deploy SpringBootAngularFullstack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Frontend build if present
        run: |
          if [ -f SpringBootAngularFullstack/frontend/package.json ]; then
            echo "Frontend build found - running build"
            cd SpringBootAngularFullstack/frontend
            npm ci
            npm run build
          else
            echo "No frontend build required"
          fi

      - name: Build backend artifact
        run: |
          if [ -f SpringBootAngularFullstack/backend/mvnw ]; then
            cd SpringBootAngularFullstack/backend
            ./mvnw clean package -DskipTests
          else
            cd SpringBootAngularFullstack/backend
            mvn clean package -DskipTests
          fi
          ls -l SpringBootAngularFullstack/backend/target || true

      - name: Build backend Docker image
        run: |
          docker build -t springboot-angular-fullstack:latest -f SpringBootAngularFullstack/backend/Dockerfile SpringBootAngularFullstack/backend

      - name: Save Docker image to tar.gz
        run: |
          docker save springboot-angular-fullstack:latest | gzip > SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz
          ls -l SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz

      - name: Write SSH key to runner
        run: |
          printf '%s\n' "${{ secrets.VM_SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ls -l /tmp/deploy_key

      - name: Copy image to VM using scp
        run: |
          set -e -x
          scp -o StrictHostKeyChecking=no -i /tmp/deploy_key \
            SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/ubuntu/dev
          echo "SCP completed"

      - name: Deploy on VM using ssh
        run: |
          set -e -x
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} <<'REMOTE'
            set -e
            cd /home/ubuntu/dev
            ls -la /home/ubuntu/dev
            if [ -f springboot-angular-fullstack.tar.gz ]; then
              gunzip -c springboot-angular-fullstack.tar.gz | docker load
              docker-compose -f docker-compose.yml up -d
              echo "DEPLOY_OK"
            else
              echo "ERROR: tar.gz not found on VM"
              exit 1
            fi
          REMOTE
