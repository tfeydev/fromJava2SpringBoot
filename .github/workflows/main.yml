name: Build and Deploy SpringBootAngularFullstack

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: (Optional) Build frontend if present
        run: |
          if [ -f SpringBootAngularFullstack/frontend/package.json ]; then
            echo "Frontend package.json found — running build"
            cd SpringBootAngularFullstack/frontend
            npm ci
            npm run build
            echo "Frontend build finished"
          else
            echo "No frontend/package.json — skipping frontend build"
          fi

      - name: Build backend Docker image
        run: |
          # Baue Image mit Backend-Dockerfile (Pfad, den du genannt hast)
          docker build -t springboot-angular-fullstack:latest -f SpringBootAngularFullstack/backend/Dockerfile SpringBootAngularFullstack/backend

      - name: Save Docker image to tar.gz
        run: |
          mkdir -p SpringBootAngularFullstack/tmp
          docker save springboot-angular-fullstack:latest | gzip > SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz
          ls -l SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz

      - name: Write SSH key to runner
        run: |
          printf '%s\n' "${{ secrets.VM_SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ls -l /tmp/deploy_key

      - name: Copy image to VM (scp)
        run: |
          set -x
          scp -o StrictHostKeyChecking=no -i /tmp/deploy_key \
            SpringBootAngularFullstack/springboot-angular-fullstack.tar.gz \
            ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/home/ubuntu/dev
          echo "SCP finished"

      - name: Deploy on VM (ssh)
        run: |
          set -x
          ssh -o StrictHostKeyChecking=no -i /tmp/deploy_key ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} <<'REMOTE'
            set -e
            cd /home/ubuntu/dev
            echo "Remote listing /home/ubuntu/dev:"
            ls -la /home/ubuntu/dev
            if [ -f springboot-angular-fullstack.tar.gz ]; then
              gunzip -c springboot-angular-fullstack.tar.gz | docker load
              # Start/Update via docker-compose (nutzt docker-compose.yml in /home/ubuntu/dev)
              docker-compose -f docker-compose.yml up -d
              echo "DEPLOY_OK"
            else
              echo "ERROR: springboot-angular-fullstack.tar.gz not found on VM"
              exit 1
            fi
          REMOTE
